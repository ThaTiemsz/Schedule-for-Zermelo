{"version":3,"sources":["js/main.js"],"names":["jQuery","document","ready","$","transitionEnd","transitionsSupported","length","SchedulePlan","element","timeline","find","timelineItems","timelineItemsNumber","timelineStart","getScheduleTimestamp","eq","text","timelineUnitDuration","eventsWrapper","eventsGroup","singleEvents","eventSlotHeight","children","outerHeight","modal","modalHeader","modalHeaderBg","modalBody","modalBodyBg","modalMaxWidth","modalMaxHeight","animating","initSchedule","scheduleReset","initEvents","mq","hasClass","removeClass","add","removeAttr","remove","checkEventModal","addClass","placeEvents","self","each","durationLabel","data","prepend","on","event","preventDefault","openModal","closeModal","start","attr","duration","eventTop","eventHeight","css","top","height","parent","load","setTimeout","one","off","offset","window","scrollTop","eventLeft","left","innerHeight","eventWidth","innerWidth","windowWidth","width","windowHeight","modalWidth","modalHeight","modalTranslateX","parseInt","modalTranslateY","HeaderBgScaleY","BodyBgScaleX","transformElement","marginLeft","trigger","modalTop","Number","replace","getComputedStyle","get","getPropertyValue","device","schedules","objSchedulesPlan","windowResize","checkResize","forEach","time","timeArray","split","timeStamp","value","push","requestAnimationFrame","keyup","keyCode"],"mappings":"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","file":"main.965f5ef7.map","sourceRoot":"../public","sourcesContent":["jQuery(document).ready(function($){\n    var transitionEnd = 'webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend';\n    var transitionsSupported = ( $('.csstransitions').length > 0 );\n    //if browser does not support transitions - use a different event to trigger them\n    if( !transitionsSupported ) transitionEnd = 'noTransition';\n    \n    //should add a loding while the events are organized \n    class SchedulePlan {\n        constructor(element) {\n            this.element = element;\n            this.timeline = this.element.find('.timeline');\n            this.timelineItems = this.timeline.find('li');\n            this.timelineItemsNumber = this.timelineItems.length;\n            this.timelineStart = getScheduleTimestamp(this.timelineItems.eq(0).text());\n            //need to store delta (in our case half hour) timestamp\n            this.timelineUnitDuration = getScheduleTimestamp(this.timelineItems.eq(1).text()) - getScheduleTimestamp(this.timelineItems.eq(0).text());\n            this.eventsWrapper = this.element.find('.events');\n            this.eventsGroup = this.eventsWrapper.find('.events-group');\n            this.singleEvents = this.eventsGroup.find('.single-event');\n            this.eventSlotHeight = this.eventsGroup.eq(0).children('.top-info').outerHeight();\n            this.modal = this.element.find('.event-modal');\n            this.modalHeader = this.modal.find('.header');\n            this.modalHeaderBg = this.modal.find('.header-bg');\n            this.modalBody = this.modal.find('.body');\n            this.modalBodyBg = this.modal.find('.body-bg');\n            this.modalMaxWidth = 800;\n            this.modalMaxHeight = 480;\n            this.animating = false;\n            this.initSchedule();\n        }\n        initSchedule() {\n            this.scheduleReset();\n            this.initEvents();\n        }\n        scheduleReset() {\n            var mq = this.mq();\n            if (mq == 'desktop' && !this.element.hasClass('js-full')) {\n                //in this case you are on a desktop version (first load or resize from mobile)\n                this.eventSlotHeight = this.eventsGroup.eq(0).children('.top-info').outerHeight();\n                this.element.addClass('js-full');\n                this.placeEvents();\n                this.element.hasClass('modal-is-open') && this.checkEventModal();\n            }\n            else if (mq == 'mobile' && this.element.hasClass('js-full')) {\n                //in this case you are on a mobile version (first load or resize from desktop)\n                this.element.removeClass('js-full loading');\n                this.eventsGroup.children('ul').add(this.singleEvents).removeAttr('style');\n                this.eventsWrapper.children('.grid-line').remove();\n                this.element.hasClass('modal-is-open') && this.checkEventModal();\n            }\n            else if (mq == 'desktop' && this.element.hasClass('modal-is-open')) {\n                //on a mobile version with modal open - need to resize/move modal window\n                this.checkEventModal('desktop');\n                this.element.removeClass('loading');\n            }\n            else {\n                this.element.removeClass('loading');\n            }\n        }\n        initEvents() {\n            var self = this;\n            this.singleEvents.each(function () {\n                //create the .event-date element for each event\n                var durationLabel = '<span class=\"event-date\">' + $(this).data('start') + ' - ' + $(this).data('end') + '</span>';\n                $(this).children('a').prepend($(durationLabel));\n                //detect click on the event and open the modal\n                $(this).on('click', 'a', function (event) {\n                    event.preventDefault();\n                    if (!self.animating)\n                        self.openModal($(this));\n                });\n            });\n            //close modal window\n            this.modal.on('click', '.close', function (event) {\n                event.preventDefault();\n                if (!self.animating)\n                    self.closeModal(self.eventsGroup.find('.selected-event'));\n            });\n            this.element.on('click', '.cover-layer', function (event) {\n                if (!self.animating && self.element.hasClass('modal-is-open'))\n                    self.closeModal(self.eventsGroup.find('.selected-event'));\n            });\n        }\n        placeEvents() {\n            var self = this;\n            this.singleEvents.each(function () {\n                //place each event in the grid -> need to set top position and height\n                var start = getScheduleTimestamp($(this).attr('data-start')), duration = getScheduleTimestamp($(this).attr('data-end')) - start;\n                var eventTop = self.eventSlotHeight * (start - self.timelineStart) / self.timelineUnitDuration, eventHeight = self.eventSlotHeight * duration / self.timelineUnitDuration;\n                $(this).css({\n                    top: (eventTop - 1) + 'px',\n                    height: (eventHeight + 1) + 'px'\n                });\n            });\n            this.element.removeClass('loading');\n        }\n        openModal(event) {\n            var self = this;\n            var mq = self.mq();\n            this.animating = true;\n            //update event name and time\n            this.modalHeader.find('.event-name').text(event.find('.event-name').text());\n            this.modalHeader.find('.event-date').text(event.find('.event-date').text());\n            this.modal.attr('data-event', event.parent().attr('data-event'));\n            //update event content\n            this.modalBody.find('.event-info').load(event.parent().attr('data-content') + '.html .event-info > *', function (data) {\n                //once the event content has been loaded\n                self.element.addClass('content-loaded');\n            });\n            this.element.addClass('modal-is-open');\n            setTimeout(function () {\n                //fixes a flash when an event is selected - desktop version only\n                event.parent('li').addClass('selected-event');\n            }, 10);\n            if (mq == 'mobile') {\n                self.modal.one(transitionEnd, function () {\n                    self.modal.off(transitionEnd);\n                    self.animating = false;\n                });\n            }\n            else {\n                var eventTop = event.offset().top - $(window).scrollTop(), eventLeft = event.offset().left, eventHeight = event.innerHeight(), eventWidth = event.innerWidth();\n                var windowWidth = $(window).width(), windowHeight = $(window).height();\n                var modalWidth = (windowWidth * .8 > self.modalMaxWidth) ? self.modalMaxWidth : windowWidth * .8, modalHeight = (windowHeight * .8 > self.modalMaxHeight) ? self.modalMaxHeight : windowHeight * .8;\n                var modalTranslateX = parseInt((windowWidth - modalWidth) / 2 - eventLeft), modalTranslateY = parseInt((windowHeight - modalHeight) / 2 - eventTop);\n                var HeaderBgScaleY = modalHeight / eventHeight, BodyBgScaleX = (modalWidth - eventWidth);\n                //change modal height/width and translate it\n                self.modal.css({\n                    top: eventTop + 'px',\n                    left: eventLeft + 'px',\n                    height: modalHeight + 'px',\n                    width: modalWidth + 'px',\n                });\n                transformElement(self.modal, 'translateY(' + modalTranslateY + 'px) translateX(' + modalTranslateX + 'px)');\n                //set modalHeader width\n                self.modalHeader.css({\n                    width: eventWidth + 'px',\n                });\n                //set modalBody left margin\n                self.modalBody.css({\n                    marginLeft: eventWidth + 'px',\n                });\n                //change modalBodyBg height/width ans scale it\n                self.modalBodyBg.css({\n                    height: eventHeight + 'px',\n                    width: '1px',\n                });\n                transformElement(self.modalBodyBg, 'scaleY(' + HeaderBgScaleY + ') scaleX(' + BodyBgScaleX + ')');\n                //change modal modalHeaderBg height/width and scale it\n                self.modalHeaderBg.css({\n                    height: eventHeight + 'px',\n                    width: eventWidth + 'px',\n                });\n                transformElement(self.modalHeaderBg, 'scaleY(' + HeaderBgScaleY + ')');\n                self.modalHeaderBg.one(transitionEnd, function () {\n                    //wait for the  end of the modalHeaderBg transformation and show the modal content\n                    self.modalHeaderBg.off(transitionEnd);\n                    self.animating = false;\n                    self.element.addClass('animation-completed');\n                });\n            }\n            //if browser do not support transitions -> no need to wait for the end of it\n            if (!transitionsSupported)\n                self.modal.add(self.modalHeaderBg).trigger(transitionEnd);\n        }\n        closeModal(event) {\n            var self = this;\n            var mq = self.mq();\n            this.animating = true;\n            if (mq == 'mobile') {\n                this.element.removeClass('modal-is-open');\n                this.modal.one(transitionEnd, function () {\n                    self.modal.off(transitionEnd);\n                    self.animating = false;\n                    self.element.removeClass('content-loaded');\n                    event.removeClass('selected-event');\n                });\n            }\n            else {\n                var eventTop = event.offset().top - $(window).scrollTop(), eventLeft = event.offset().left, eventHeight = event.innerHeight(), eventWidth = event.innerWidth();\n                var modalTop = Number(self.modal.css('top').replace('px', '')), modalLeft = Number(self.modal.css('left').replace('px', ''));\n                var modalTranslateX = eventLeft - modalLeft, modalTranslateY = eventTop - modalTop;\n                self.element.removeClass('animation-completed modal-is-open');\n                //change modal width/height and translate it\n                this.modal.css({\n                    width: eventWidth + 'px',\n                    height: eventHeight + 'px'\n                });\n                transformElement(self.modal, 'translateX(' + modalTranslateX + 'px) translateY(' + modalTranslateY + 'px)');\n                //scale down modalBodyBg element\n                transformElement(self.modalBodyBg, 'scaleX(0) scaleY(1)');\n                //scale down modalHeaderBg element\n                transformElement(self.modalHeaderBg, 'scaleY(1)');\n                this.modalHeaderBg.one(transitionEnd, function () {\n                    //wait for the  end of the modalHeaderBg transformation and reset modal style\n                    self.modalHeaderBg.off(transitionEnd);\n                    self.modal.addClass('no-transition');\n                    setTimeout(function () {\n                        self.modal.add(self.modalHeader).add(self.modalBody).add(self.modalHeaderBg).add(self.modalBodyBg).attr('style', '');\n                    }, 10);\n                    setTimeout(function () {\n                        self.modal.removeClass('no-transition');\n                    }, 20);\n                    self.animating = false;\n                    self.element.removeClass('content-loaded');\n                    event.removeClass('selected-event');\n                });\n            }\n            //browser do not support transitions -> no need to wait for the end of it\n            if (!transitionsSupported)\n                self.modal.add(self.modalHeaderBg).trigger(transitionEnd);\n        }\n        mq() {\n            //get MQ value ('desktop' or 'mobile') \n            var self = this;\n            return window.getComputedStyle(this.element.get(0), '::before').getPropertyValue('content').replace(/[\"']/g, '');\n        }\n        checkEventModal(device) {\n            this.animating = true;\n            var self = this;\n            var mq = this.mq();\n            if (mq == 'mobile') {\n                //reset modal style on mobile\n                self.modal.add(self.modalHeader).add(self.modalHeaderBg).add(self.modalBody).add(self.modalBodyBg).attr('style', '');\n                self.modal.removeClass('no-transition');\n                self.animating = false;\n            }\n            else if (mq == 'desktop' && self.element.hasClass('modal-is-open')) {\n                self.modal.addClass('no-transition');\n                self.element.addClass('animation-completed');\n                var event = self.eventsGroup.find('.selected-event');\n                var eventTop = event.offset().top - $(window).scrollTop(), eventLeft = event.offset().left, eventHeight = event.innerHeight(), eventWidth = event.innerWidth();\n                var windowWidth = $(window).width(), windowHeight = $(window).height();\n                var modalWidth = (windowWidth * .8 > self.modalMaxWidth) ? self.modalMaxWidth : windowWidth * .8, modalHeight = (windowHeight * .8 > self.modalMaxHeight) ? self.modalMaxHeight : windowHeight * .8;\n                var HeaderBgScaleY = modalHeight / eventHeight, BodyBgScaleX = (modalWidth - eventWidth);\n                setTimeout(function () {\n                    self.modal.css({\n                        width: modalWidth + 'px',\n                        height: modalHeight + 'px',\n                        top: (windowHeight / 2 - modalHeight / 2) + 'px',\n                        left: (windowWidth / 2 - modalWidth / 2) + 'px',\n                    });\n                    transformElement(self.modal, 'translateY(0) translateX(0)');\n                    //change modal modalBodyBg height/width\n                    self.modalBodyBg.css({\n                        height: modalHeight + 'px',\n                        width: '1px',\n                    });\n                    transformElement(self.modalBodyBg, 'scaleX(' + BodyBgScaleX + ')');\n                    //set modalHeader width\n                    self.modalHeader.css({\n                        width: eventWidth + 'px',\n                    });\n                    //set modalBody left margin\n                    self.modalBody.css({\n                        marginLeft: eventWidth + 'px',\n                    });\n                    //change modal modalHeaderBg height/width and scale it\n                    self.modalHeaderBg.css({\n                        height: eventHeight + 'px',\n                        width: eventWidth + 'px',\n                    });\n                    transformElement(self.modalHeaderBg, 'scaleY(' + HeaderBgScaleY + ')');\n                }, 10);\n                setTimeout(function () {\n                    self.modal.removeClass('no-transition');\n                    self.animating = false;\n                }, 20);\n            }\n        }\n    }\n\n    var schedules = $('.cd-schedule');\n    var objSchedulesPlan = [],\n        windowResize = false;\n    \n    if( schedules.length > 0 ) {\n        schedules.each(function(){\n            //create SchedulePlan objects\n            objSchedulesPlan.push(new SchedulePlan($(this)));\n        });\n    }\n\n    $(window).on('resize', function(){\n        if( !windowResize ) {\n            windowResize = true;\n            (!window.requestAnimationFrame) ? setTimeout(checkResize) : window.requestAnimationFrame(checkResize);\n        }\n    });\n\n    $(window).keyup(function(event) {\n        if (event.keyCode == 27) {\n            objSchedulesPlan.forEach(function(element){\n                element.closeModal(element.eventsGroup.find('.selected-event'));\n            });\n        }\n    });\n\n    function checkResize(){\n        objSchedulesPlan.forEach(function(element){\n            element.scheduleReset();\n        });\n        windowResize = false;\n    }\n\n    function getScheduleTimestamp(time) {\n        //accepts hh:mm format - convert hh:mm to timestamp\n        time = time.replace(/ /g,'');\n        var timeArray = time.split(':');\n        var timeStamp = parseInt(timeArray[0])*60 + parseInt(timeArray[1]);\n        return timeStamp;\n    }\n\n    function transformElement(element, value) {\n        element.css({\n            '-moz-transform': value,\n            '-webkit-transform': value,\n            '-ms-transform': value,\n            '-o-transform': value,\n            'transform': value\n        });\n    }\n});"]}